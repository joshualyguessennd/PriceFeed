/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from ".";
import { VRFConsumer } from "./VRFConsumer";

export class VRFConsumerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _vrfCoordinator: string,
    _link: string,
    overrides?: TransactionOverrides
  ): Promise<VRFConsumer> {
    return super.deploy(_vrfCoordinator, _link, overrides) as Promise<
      VRFConsumer
    >;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _link: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_vrfCoordinator, _link, overrides);
  }
  attach(address: string): VRFConsumer {
    return super.attach(address) as VRFConsumer;
  }
  connect(signer: Signer): VRFConsumerFactory {
    return super.connect(signer) as VRFConsumerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFConsumer {
    return new Contract(address, _abi, signerOrProvider) as VRFConsumer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "randomnessOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_seed",
        type: "uint256",
      },
    ],
    name: "testRequestRandomness",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516105823803806105828339818101604052604081101561003357600080fd5b5080516020909101516001600160601b0319606092831b811660a052911b1660805260805160601c60a05160601c6104ff61008360003980610131528061021d5250806101e152506104ff6000f3fe608060405234801561001057600080fd5b50600436106100665760003560e01c80638a5f002b116100505780638a5f002b1461008d57806394985ddd146100b65780639e317f12146100db57610066565b80626d6cae1461006b5780632f47fd8614610085575b600080fd5b6100736100f8565b60408051918252519081900360200190f35b6100736100fe565b610073600480360360608110156100a357600080fd5b5080359060208101359060400135610104565b6100d9600480360360408110156100cc57600080fd5b5080359060200135610119565b005b610073600480360360208110156100f157600080fd5b50356101cb565b60025481565b60015481565b60006101118484846101dd565b949350505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146101bd57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015290519081900360640190fd5b6101c782826103c6565b5050565b60006020819052908152604090205481565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f000000000000000000000000000000000000000000000000000000000000000085878660405160200180838152602001828152602001925050506040516020818303038152906040526040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156102e95781810151838201526020016102d1565b50505050905090810190601f1680156103165780820380516001836020036101000a031916815260200191505b50945050505050602060405180830381600087803b15801561033757600080fd5b505af115801561034b573d6000803e3d6000fd5b505050506040513d602081101561036157600080fd5b5050600084815260208190526040812054610381908690859030906103ce565b6000868152602081905260409020549091506103a490600163ffffffff61042216565b6000868152602081905260409020556103bd858261049d565b95945050505050565b600155600255565b604080516020808201969096528082019490945273ffffffffffffffffffffffffffffffffffffffff9290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b60008282018381101561049657604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b60408051602080820194909452808201929092528051808303820181526060909201905280519101209056fea2646970667358221220de025bfef05555d8234136fe3a4313b82f2800683983e67e88cd6ac0955b430864736f6c63430006060033";
