"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
class VRFRequestIDBaseTestHelperFactory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides);
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides);
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.VRFRequestIDBaseTestHelperFactory = VRFRequestIDBaseTestHelperFactory;
const _abi = [
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_keyHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_vRFInputSeed",
                type: "uint256",
            },
        ],
        name: "makeRequestId_",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_keyHash",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "_userSeed",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "_requester",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "_nonce",
                type: "uint256",
            },
        ],
        name: "makeVRFInputSeed_",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50610195806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337ab429a1461003b578063bda087ae14610092575b600080fd5b6100806004803603608081101561005157600080fd5b5080359060208101359073ffffffffffffffffffffffffffffffffffffffff60408201351690606001356100b5565b60408051918252519081900360200190f35b610080600480360360408110156100a857600080fd5b50803590602001356100cc565b60006100c3858585856100df565b95945050505050565b60006100d88383610133565b9392505050565b604080516020808201969096528082019490945273ffffffffffffffffffffffffffffffffffffffff9290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b60408051602080820194909452808201929092528051808303820181526060909201905280519101209056fea264697066735822122046d0e3aa2f672304b38d3f036a3e1938e2add581b59316a180a7c26a84f4ee9664736f6c63430006060033";
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXJGYWN0b3J5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXJGYWN0b3J5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSwrQ0FBK0M7QUFDL0Msb0JBQW9CO0FBQ3BCLG9CQUFvQjs7QUFFcEIsbUNBQTJEO0FBTzNELE1BQWEsaUNBQWtDLFNBQVEsd0JBQWU7SUFDcEUsWUFBWSxNQUFlO1FBQ3pCLEtBQUssQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ2pDLENBQUM7SUFFRCxNQUFNLENBQ0osU0FBZ0M7UUFFaEMsT0FBTyxLQUFLLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBd0MsQ0FBQztJQUN4RSxDQUFDO0lBQ0Qsb0JBQW9CLENBQUMsU0FBZ0M7UUFDbkQsT0FBTyxLQUFLLENBQUMsb0JBQW9CLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDL0MsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFlO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQStCLENBQUM7SUFDN0QsQ0FBQztJQUNELE9BQU8sQ0FBQyxNQUFjO1FBQ3BCLE9BQU8sS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQXNDLENBQUM7SUFDcEUsQ0FBQztJQUNELE1BQU0sQ0FBQyxPQUFPLENBQ1osT0FBZSxFQUNmLGdCQUFtQztRQUVuQyxPQUFPLElBQUksaUJBQVEsQ0FDakIsT0FBTyxFQUNQLElBQUksRUFDSixnQkFBZ0IsQ0FDYSxDQUFDO0lBQ2xDLENBQUM7Q0FDRjtBQTdCRCw4RUE2QkM7QUFFRCxNQUFNLElBQUksR0FBRztJQUNYO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxVQUFVO2dCQUNoQixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsZUFBZTtnQkFDckIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7U0FDRjtRQUNELElBQUksRUFBRSxnQkFBZ0I7UUFDdEIsT0FBTyxFQUFFO1lBQ1A7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxFQUFFO2dCQUNSLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxlQUFlLEVBQUUsTUFBTTtRQUN2QixJQUFJLEVBQUUsVUFBVTtLQUNqQjtJQUNEO1FBQ0UsTUFBTSxFQUFFO1lBQ047Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxVQUFVO2dCQUNoQixJQUFJLEVBQUUsU0FBUzthQUNoQjtZQUNEO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsV0FBVztnQkFDakIsSUFBSSxFQUFFLFNBQVM7YUFDaEI7WUFDRDtnQkFDRSxZQUFZLEVBQUUsU0FBUztnQkFDdkIsSUFBSSxFQUFFLFlBQVk7Z0JBQ2xCLElBQUksRUFBRSxTQUFTO2FBQ2hCO1lBQ0Q7Z0JBQ0UsWUFBWSxFQUFFLFNBQVM7Z0JBQ3ZCLElBQUksRUFBRSxRQUFRO2dCQUNkLElBQUksRUFBRSxTQUFTO2FBQ2hCO1NBQ0Y7UUFDRCxJQUFJLEVBQUUsbUJBQW1CO1FBQ3pCLE9BQU8sRUFBRTtZQUNQO2dCQUNFLFlBQVksRUFBRSxTQUFTO2dCQUN2QixJQUFJLEVBQUUsRUFBRTtnQkFDUixJQUFJLEVBQUUsU0FBUzthQUNoQjtTQUNGO1FBQ0QsZUFBZSxFQUFFLE1BQU07UUFDdkIsSUFBSSxFQUFFLFVBQVU7S0FDakI7Q0FDRixDQUFDO0FBRUYsTUFBTSxTQUFTLEdBQ2IsODJCQUE4MkIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qIEF1dG9nZW5lcmF0ZWQgZmlsZS4gRG8gbm90IGVkaXQgbWFudWFsbHkuICovXG4vKiB0c2xpbnQ6ZGlzYWJsZSAqL1xuLyogZXNsaW50LWRpc2FibGUgKi9cblxuaW1wb3J0IHsgQ29udHJhY3QsIENvbnRyYWN0RmFjdG9yeSwgU2lnbmVyIH0gZnJvbSBcImV0aGVyc1wiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiZXRoZXJzL3Byb3ZpZGVyc1wiO1xuaW1wb3J0IHsgVW5zaWduZWRUcmFuc2FjdGlvbiB9IGZyb20gXCJldGhlcnMvdXRpbHMvdHJhbnNhY3Rpb25cIjtcblxuaW1wb3J0IHsgVHJhbnNhY3Rpb25PdmVycmlkZXMgfSBmcm9tIFwiLlwiO1xuaW1wb3J0IHsgVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXIgfSBmcm9tIFwiLi9WUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlclwiO1xuXG5leHBvcnQgY2xhc3MgVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXJGYWN0b3J5IGV4dGVuZHMgQ29udHJhY3RGYWN0b3J5IHtcbiAgY29uc3RydWN0b3Ioc2lnbmVyPzogU2lnbmVyKSB7XG4gICAgc3VwZXIoX2FiaSwgX2J5dGVjb2RlLCBzaWduZXIpO1xuICB9XG5cbiAgZGVwbG95KFxuICAgIG92ZXJyaWRlcz86IFRyYW5zYWN0aW9uT3ZlcnJpZGVzXG4gICk6IFByb21pc2U8VlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXI+IHtcbiAgICByZXR1cm4gc3VwZXIuZGVwbG95KG92ZXJyaWRlcykgYXMgUHJvbWlzZTxWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlcj47XG4gIH1cbiAgZ2V0RGVwbG95VHJhbnNhY3Rpb24ob3ZlcnJpZGVzPzogVHJhbnNhY3Rpb25PdmVycmlkZXMpOiBVbnNpZ25lZFRyYW5zYWN0aW9uIHtcbiAgICByZXR1cm4gc3VwZXIuZ2V0RGVwbG95VHJhbnNhY3Rpb24ob3ZlcnJpZGVzKTtcbiAgfVxuICBhdHRhY2goYWRkcmVzczogc3RyaW5nKTogVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXIge1xuICAgIHJldHVybiBzdXBlci5hdHRhY2goYWRkcmVzcykgYXMgVlJGUmVxdWVzdElEQmFzZVRlc3RIZWxwZXI7XG4gIH1cbiAgY29ubmVjdChzaWduZXI6IFNpZ25lcik6IFZSRlJlcXVlc3RJREJhc2VUZXN0SGVscGVyRmFjdG9yeSB7XG4gICAgcmV0dXJuIHN1cGVyLmNvbm5lY3Qoc2lnbmVyKSBhcyBWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlckZhY3Rvcnk7XG4gIH1cbiAgc3RhdGljIGNvbm5lY3QoXG4gICAgYWRkcmVzczogc3RyaW5nLFxuICAgIHNpZ25lck9yUHJvdmlkZXI6IFNpZ25lciB8IFByb3ZpZGVyXG4gICk6IFZSRlJlcXVlc3RJREJhc2VUZXN0SGVscGVyIHtcbiAgICByZXR1cm4gbmV3IENvbnRyYWN0KFxuICAgICAgYWRkcmVzcyxcbiAgICAgIF9hYmksXG4gICAgICBzaWduZXJPclByb3ZpZGVyXG4gICAgKSBhcyBWUkZSZXF1ZXN0SURCYXNlVGVzdEhlbHBlcjtcbiAgfVxufVxuXG5jb25zdCBfYWJpID0gW1xuICB7XG4gICAgaW5wdXRzOiBbXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJieXRlczMyXCIsXG4gICAgICAgIG5hbWU6IFwiX2tleUhhc2hcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpbnRlcm5hbFR5cGU6IFwidWludDI1NlwiLFxuICAgICAgICBuYW1lOiBcIl92UkZJbnB1dFNlZWRcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJtYWtlUmVxdWVzdElkX1wiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJieXRlczMyXCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInB1cmVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gIH0sXG4gIHtcbiAgICBpbnB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImJ5dGVzMzJcIixcbiAgICAgICAgbmFtZTogXCJfa2V5SGFzaFwiLFxuICAgICAgICB0eXBlOiBcImJ5dGVzMzJcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGludGVybmFsVHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICAgIG5hbWU6IFwiX3VzZXJTZWVkXCIsXG4gICAgICAgIHR5cGU6IFwidWludDI1NlwiLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcImFkZHJlc3NcIixcbiAgICAgICAgbmFtZTogXCJfcmVxdWVzdGVyXCIsXG4gICAgICAgIHR5cGU6IFwiYWRkcmVzc1wiLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJfbm9uY2VcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgbmFtZTogXCJtYWtlVlJGSW5wdXRTZWVkX1wiLFxuICAgIG91dHB1dHM6IFtcbiAgICAgIHtcbiAgICAgICAgaW50ZXJuYWxUeXBlOiBcInVpbnQyNTZcIixcbiAgICAgICAgbmFtZTogXCJcIixcbiAgICAgICAgdHlwZTogXCJ1aW50MjU2XCIsXG4gICAgICB9LFxuICAgIF0sXG4gICAgc3RhdGVNdXRhYmlsaXR5OiBcInB1cmVcIixcbiAgICB0eXBlOiBcImZ1bmN0aW9uXCIsXG4gIH0sXG5dO1xuXG5jb25zdCBfYnl0ZWNvZGUgPVxuICBcIjB4NjA4MDYwNDA1MjM0ODAxNTYxMDAxMDU3NjAwMDgwZmQ1YjUwNjEwMTk1ODA2MTAwMjA2MDAwMzk2MDAwZjNmZTYwODA2MDQwNTIzNDgwMTU2MTAwMTA1NzYwMDA4MGZkNWI1MDYwMDQzNjEwNjEwMDM2NTc2MDAwMzU2MGUwMWM4MDYzMzdhYjQyOWExNDYxMDAzYjU3ODA2M2JkYTA4N2FlMTQ2MTAwOTI1NzViNjAwMDgwZmQ1YjYxMDA4MDYwMDQ4MDM2MDM2MDgwODExMDE1NjEwMDUxNTc2MDAwODBmZDViNTA4MDM1OTA2MDIwODEwMTM1OTA3M2ZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmY2MDQwODIwMTM1MTY5MDYwNjAwMTM1NjEwMGI1NTY1YjYwNDA4MDUxOTE4MjUyNTE5MDgxOTAwMzYwMjAwMTkwZjM1YjYxMDA4MDYwMDQ4MDM2MDM2MDQwODExMDE1NjEwMGE4NTc2MDAwODBmZDViNTA4MDM1OTA2MDIwMDEzNTYxMDBjYzU2NWI2MDAwNjEwMGMzODU4NTg1ODU2MTAwZGY1NjViOTU5NDUwNTA1MDUwNTA1NjViNjAwMDYxMDBkODgzODM2MTAxMzM1NjViOTM5MjUwNTA1MDU2NWI2MDQwODA1MTYwMjA4MDgyMDE5NjkwOTY1MjgwODIwMTk0OTA5NDUyNzNmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmZmOTI5MDkyMTY2MDYwODQwMTUyNjA4MDgwODQwMTkxOTA5MTUyODE1MTgwODQwMzkwOTEwMTgxNTI2MGEwOTA5MjAxOTA1MjgwNTE5MTAxMjA5MDU2NWI2MDQwODA1MTYwMjA4MDgyMDE5NDkwOTQ1MjgwODIwMTkyOTA5MjUyODA1MTgwODMwMzgyMDE4MTUyNjA2MDkwOTIwMTkwNTI4MDUxOTEwMTIwOTA1NmZlYTI2NDY5NzA2NjczNTgyMjEyMjA0NmQwZTNhYTJmNjcyMzA0YjM4ZDNmMDM2YTNlMTkzOGUyYWRkNTgxYjU5MzE2YTE4MGE3YzI2YTg0ZjRlZTk2NjQ3MzZmNmM2MzQzMDAwNjA2MDAzM1wiO1xuIl19